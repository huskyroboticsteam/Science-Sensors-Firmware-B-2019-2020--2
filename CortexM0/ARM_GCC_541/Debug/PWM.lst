ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	PWM_Enable, %function
  25              	PWM_Enable:
  26              	.LFB3:
  27              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM.c **** *
  15:Generated_Source\PSoC4/PWM.c **** * Note:
  16:Generated_Source\PSoC4/PWM.c **** *
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  25:Generated_Source\PSoC4/PWM.c **** 
  26:Generated_Source\PSoC4/PWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM.c **** #ifdef PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM.c **** #endif /* PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 2


  31:Generated_Source\PSoC4/PWM.c **** 
  32:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  33:Generated_Source\PSoC4/PWM.c **** 
  34:Generated_Source\PSoC4/PWM.c **** 
  35:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
  37:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM.c **** *
  39:Generated_Source\PSoC4/PWM.c **** * Summary:
  40:Generated_Source\PSoC4/PWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM.c **** *
  44:Generated_Source\PSoC4/PWM.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM.c **** *  None
  46:Generated_Source\PSoC4/PWM.c **** *
  47:Generated_Source\PSoC4/PWM.c **** * Return:
  48:Generated_Source\PSoC4/PWM.c **** *  None
  49:Generated_Source\PSoC4/PWM.c **** *
  50:Generated_Source\PSoC4/PWM.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM.c **** *
  54:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void) 
  56:Generated_Source\PSoC4/PWM.c **** {
  57:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM.c ****     if(PWM_initVar == 0u)
  59:Generated_Source\PSoC4/PWM.c ****     {
  60:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
  61:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
  62:Generated_Source\PSoC4/PWM.c ****     }
  63:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
  64:Generated_Source\PSoC4/PWM.c **** 
  65:Generated_Source\PSoC4/PWM.c **** }
  66:Generated_Source\PSoC4/PWM.c **** 
  67:Generated_Source\PSoC4/PWM.c **** 
  68:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  70:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM.c **** *
  72:Generated_Source\PSoC4/PWM.c **** * Summary:
  73:Generated_Source\PSoC4/PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM.c **** *  PWM_Start().
  76:Generated_Source\PSoC4/PWM.c **** *
  77:Generated_Source\PSoC4/PWM.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM.c **** *  None
  79:Generated_Source\PSoC4/PWM.c **** *
  80:Generated_Source\PSoC4/PWM.c **** * Return:
  81:Generated_Source\PSoC4/PWM.c **** *  None
  82:Generated_Source\PSoC4/PWM.c **** *
  83:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void) 
  85:Generated_Source\PSoC4/PWM.c **** {
  86:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
  87:Generated_Source\PSoC4/PWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 3


  88:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction || PWM_UseControl) */
  89:Generated_Source\PSoC4/PWM.c **** 
  90:Generated_Source\PSoC4/PWM.c ****     #if(!PWM_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
  92:Generated_Source\PSoC4/PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM.c ****             uint8 PWM_interruptState;
  94:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
  95:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM.c **** 
  97:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= PWM_CFG0_DB;
 102:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM.c **** 
 104:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL3 & ((uint8 )(~PWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL3 = ctrl | PWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_RT1_MASK));
 109:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNC;
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****     #elif (PWM_UseControl)
 116:Generated_Source\PSoC4/PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL & ((uint8)(~PWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL = ctrl | PWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM.c **** 
 123:Generated_Source\PSoC4/PWM.c ****     #if (!PWM_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM.c ****         #if (PWM_Resolution == 8)
 125:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/PWM.c ****         #else /* (PWM_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM.c **** 
 133:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****     PWM_WritePeriod(PWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/PWM.c **** 
 138:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/PWM.c ****         #else
 141:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare1(PWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 4


 145:Generated_Source\PSoC4/PWM.c ****         #if (PWM_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM.c ****             PWM_WriteKillTime(PWM_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_WriteDeadTime(PWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM.c **** 
 153:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus || PWM_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM.c **** 
 157:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL2 |= PWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM.c ****     #else
 163:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
 164:Generated_Source\PSoC4/PWM.c **** 
 165:Generated_Source\PSoC4/PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM.c ****             PWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM.c ****             PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/PWM.c **** 
 171:Generated_Source\PSoC4/PWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM.c ****             CyExitCriticalSection(PWM_interruptState);
 173:Generated_Source\PSoC4/PWM.c **** 
 174:Generated_Source\PSoC4/PWM.c ****             /* Clear the FIFO to enable the PWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM.c ****             PWM_ClearFIFO();
 177:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 178:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM.c **** }
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c **** 
 182:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 184:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM.c **** *
 186:Generated_Source\PSoC4/PWM.c **** * Summary:
 187:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM.c **** *
 189:Generated_Source\PSoC4/PWM.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM.c **** *  None
 191:Generated_Source\PSoC4/PWM.c **** *
 192:Generated_Source\PSoC4/PWM.c **** * Return:
 193:Generated_Source\PSoC4/PWM.c **** *  None
 194:Generated_Source\PSoC4/PWM.c **** *
 195:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM.c **** *
 198:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void) 
 200:Generated_Source\PSoC4/PWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC4/PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE |= PWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM.c **** 
 207:Generated_Source\PSoC4/PWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 8023     		movs	r3, #128
  37 0006 5B42     		rsbs	r3, r3, #0
  38 0008 0B43     		orrs	r3, r1
  39 000a DBB2     		uxtb	r3, r3
  40 000c 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM.c **** }
  41              		.loc 1 211 0
  42              		@ sp needed
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 71000F40 		.word	1074724977
  48              		.cfi_endproc
  49              	.LFE3:
  50              		.size	PWM_Enable, .-PWM_Enable
  51              		.section	.text.PWM_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	PWM_Stop
  54              		.code	16
  55              		.thumb_func
  56              		.type	PWM_Stop, %function
  57              	PWM_Stop:
  58              	.LFB4:
 212:Generated_Source\PSoC4/PWM.c **** 
 213:Generated_Source\PSoC4/PWM.c **** 
 214:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 216:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM.c **** *
 218:Generated_Source\PSoC4/PWM.c **** * Summary:
 219:Generated_Source\PSoC4/PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM.c **** *  None
 224:Generated_Source\PSoC4/PWM.c **** *
 225:Generated_Source\PSoC4/PWM.c **** * Return:
 226:Generated_Source\PSoC4/PWM.c **** *  None
 227:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 6


 228:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM.c **** *
 232:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void) 
 234:Generated_Source\PSoC4/PWM.c **** {
  59              		.loc 1 234 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 235:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL &= ((uint8)(~PWM_CTRL_ENABLE));
  64              		.loc 1 236 0
  65 0000 024A     		ldr	r2, .L5
  66 0002 1178     		ldrb	r1, [r2]
  67 0004 7F23     		movs	r3, #127
  68 0006 0B40     		ands	r3, r1
  69 0008 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM.c **** 
 239:Generated_Source\PSoC4/PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE &= ((uint8)(~PWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM.c **** }
  70              		.loc 1 244 0
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 71000F40 		.word	1074724977
  77              		.cfi_endproc
  78              	.LFE4:
  79              		.size	PWM_Stop, .-PWM_Stop
  80              		.section	.text.PWM_WriteCounter,"ax",%progbits
  81              		.align	2
  82              		.global	PWM_WriteCounter
  83              		.code	16
  84              		.thumb_func
  85              		.type	PWM_WriteCounter, %function
  86              	PWM_WriteCounter:
  87              	.LFB5:
 245:Generated_Source\PSoC4/PWM.c **** 
 246:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM.c **** 
 249:Generated_Source\PSoC4/PWM.c **** 
 250:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode
 252:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM.c ****         *
 254:Generated_Source\PSoC4/PWM.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 7


 256:Generated_Source\PSoC4/PWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM.c ****         *
 258:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM.c ****         *
 262:Generated_Source\PSoC4/PWM.c ****         * Return:
 263:Generated_Source\PSoC4/PWM.c ****         *  None
 264:Generated_Source\PSoC4/PWM.c ****         *
 265:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM.c ****         {
 268:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM.c **** 
 270:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC4/PWM.c ****                 #else
 273:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM.c **** 
 276:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM.c **** 
 279:Generated_Source\PSoC4/PWM.c ****             #elif (PWM_UseControl)
 280:Generated_Source\PSoC4/PWM.c **** 
 281:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC4/PWM.c ****                                                 PWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM.c ****                 #else
 285:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM.c **** 
 288:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHI
 290:Generated_Source\PSoC4/PWM.c ****                                                PWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM.c ****                 #else
 292:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM.c **** 
 295:Generated_Source\PSoC4/PWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~(PWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM.c ****                                             PWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM.c **** 
 300:Generated_Source\PSoC4/PWM.c ****             #else
 301:Generated_Source\PSoC4/PWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM.c ****         }
 304:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM.c **** 
 308:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM.c **** 
 310:Generated_Source\PSoC4/PWM.c **** 
 311:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 8


 313:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM.c ****         *
 315:Generated_Source\PSoC4/PWM.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM.c ****         *
 318:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM.c ****         *
 322:Generated_Source\PSoC4/PWM.c ****         * Return:
 323:Generated_Source\PSoC4/PWM.c ****         *  None
 324:Generated_Source\PSoC4/PWM.c ****         *
 325:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM.c ****         {
 328:Generated_Source\PSoC4/PWM.c ****             #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC4/PWM.c ****                                            PWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM.c ****             #else
 332:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM.c ****             #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****             #if (PWM_UseControl)
 336:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UseControl) */
 339:Generated_Source\PSoC4/PWM.c ****         }
 340:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM.c **** 
 342:Generated_Source\PSoC4/PWM.c **** #if (PWM_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM.c **** 
 344:Generated_Source\PSoC4/PWM.c **** 
 345:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetCompareMode2
 347:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM.c ****     *
 349:Generated_Source\PSoC4/PWM.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM.c ****     *
 352:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM.c ****     *
 356:Generated_Source\PSoC4/PWM.c ****     * Return:
 357:Generated_Source\PSoC4/PWM.c ****     *  None
 358:Generated_Source\PSoC4/PWM.c ****     *
 359:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM.c ****     void PWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM.c ****     {
 362:Generated_Source\PSoC4/PWM.c **** 
 363:Generated_Source\PSoC4/PWM.c ****         #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/PWM.c ****                                                  PWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM.c ****         #else
 367:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM.c ****         #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 9


 370:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseControl)
 371:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseControl) */
 374:Generated_Source\PSoC4/PWM.c ****     }
 375:Generated_Source\PSoC4/PWM.c ****     #endif /*PWM_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM.c **** 
 377:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM.c **** 
 379:Generated_Source\PSoC4/PWM.c **** 
 380:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM.c **** 
 382:Generated_Source\PSoC4/PWM.c **** 
 383:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCounter
 385:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM.c ****     *
 387:Generated_Source\PSoC4/PWM.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM.c ****     *
 393:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM.c ****     *
 396:Generated_Source\PSoC4/PWM.c ****     * Return:
 397:Generated_Source\PSoC4/PWM.c ****     *  None
 398:Generated_Source\PSoC4/PWM.c ****     *
 399:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM.c ****     *
 402:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC4/PWM.c ****                                        
 405:Generated_Source\PSoC4/PWM.c ****     {
  88              		.loc 1 405 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL0:
 406:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_COUNTER_LSB_PTR, counter);
  94              		.loc 1 406 0
  95 0000 014B     		ldr	r3, .L8
  96 0002 1880     		strh	r0, [r3]
 407:Generated_Source\PSoC4/PWM.c ****     }
  97              		.loc 1 407 0
  98              		@ sp needed
  99 0004 7047     		bx	lr
 100              	.L9:
 101 0006 C046     		.align	2
 102              	.L8:
 103 0008 00100F40 		.word	1074728960
 104              		.cfi_endproc
 105              	.LFE5:
 106              		.size	PWM_WriteCounter, .-PWM_WriteCounter
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 10


 107              		.section	.text.PWM_ReadCounter,"ax",%progbits
 108              		.align	2
 109              		.global	PWM_ReadCounter
 110              		.code	16
 111              		.thumb_func
 112              		.type	PWM_ReadCounter, %function
 113              	PWM_ReadCounter:
 114              	.LFB6:
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** 
 410:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCounter
 412:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM.c ****     *
 414:Generated_Source\PSoC4/PWM.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM.c ****     *
 418:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM.c ****     *  None
 420:Generated_Source\PSoC4/PWM.c ****     *
 421:Generated_Source\PSoC4/PWM.c ****     * Return:
 422:Generated_Source\PSoC4/PWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM.c ****     *
 424:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM.c ****     {
 115              		.loc 1 426 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 427:Generated_Source\PSoC4/PWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM.c ****           (void)CY_GET_REG8(PWM_COUNTERCAP_LSB_PTR_8BIT);
 120              		.loc 1 430 0
 121 0000 024B     		ldr	r3, .L11
 122 0002 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM.c **** 
 432:Generated_Source\PSoC4/PWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 123              		.loc 1 433 0
 124 0004 024B     		ldr	r3, .L11+4
 125 0006 1888     		ldrh	r0, [r3]
 126 0008 80B2     		uxth	r0, r0
 434:Generated_Source\PSoC4/PWM.c ****     }
 127              		.loc 1 434 0
 128              		@ sp needed
 129 000a 7047     		bx	lr
 130              	.L12:
 131              		.align	2
 132              	.L11:
 133 000c 10000F40 		.word	1074724880
 134 0010 A0100F40 		.word	1074729120
 135              		.cfi_endproc
 136              	.LFE6:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 11


 137              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 138              		.section	.text.PWM_WritePeriod,"ax",%progbits
 139              		.align	2
 140              		.global	PWM_WritePeriod
 141              		.code	16
 142              		.thumb_func
 143              		.type	PWM_WritePeriod, %function
 144              	PWM_WritePeriod:
 145              	.LFB8:
 435:Generated_Source\PSoC4/PWM.c **** 
 436:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus)
 437:Generated_Source\PSoC4/PWM.c **** 
 438:Generated_Source\PSoC4/PWM.c **** 
 439:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_ClearFIFO
 441:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM.c ****         *
 443:Generated_Source\PSoC4/PWM.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM.c ****         *
 446:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM.c ****         *  None
 448:Generated_Source\PSoC4/PWM.c ****         *
 449:Generated_Source\PSoC4/PWM.c ****         * Return:
 450:Generated_Source\PSoC4/PWM.c ****         *  None
 451:Generated_Source\PSoC4/PWM.c ****         *
 452:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM.c ****         void PWM_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM.c ****         {
 455:Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/PWM.c ****             {
 457:Generated_Source\PSoC4/PWM.c ****                 (void)PWM_ReadCapture();
 458:Generated_Source\PSoC4/PWM.c ****             }
 459:Generated_Source\PSoC4/PWM.c ****         }
 460:Generated_Source\PSoC4/PWM.c **** 
 461:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_UseStatus */
 462:Generated_Source\PSoC4/PWM.c **** 
 463:Generated_Source\PSoC4/PWM.c **** #endif /* !PWM_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM.c **** 
 465:Generated_Source\PSoC4/PWM.c **** 
 466:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 468:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM.c **** *
 470:Generated_Source\PSoC4/PWM.c **** * Summary:
 471:Generated_Source\PSoC4/PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM.c **** *
 474:Generated_Source\PSoC4/PWM.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM.c **** *
 478:Generated_Source\PSoC4/PWM.c **** * Return:
 479:Generated_Source\PSoC4/PWM.c **** *  None
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint16 period) 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 12


 483:Generated_Source\PSoC4/PWM.c **** {
 146              		.loc 1 483 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL1:
 484:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM.c ****     #else
 487:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, period);
 152              		.loc 1 487 0
 153 0000 014B     		ldr	r3, .L14
 154 0002 1880     		strh	r0, [r3]
 488:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM.c **** }
 155              		.loc 1 489 0
 156              		@ sp needed
 157 0004 7047     		bx	lr
 158              	.L15:
 159 0006 C046     		.align	2
 160              	.L14:
 161 0008 80100F40 		.word	1074729088
 162              		.cfi_endproc
 163              	.LFE8:
 164              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 165              		.section	.text.PWM_WriteCompare,"ax",%progbits
 166              		.align	2
 167              		.global	PWM_WriteCompare
 168              		.code	16
 169              		.thumb_func
 170              		.type	PWM_WriteCompare, %function
 171              	PWM_WriteCompare:
 172              	.LFB9:
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM.c **** 
 493:Generated_Source\PSoC4/PWM.c **** 
 494:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare
 496:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM.c ****     *
 498:Generated_Source\PSoC4/PWM.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM.c ****     *
 505:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM.c ****     *
 508:Generated_Source\PSoC4/PWM.c ****     * Return:
 509:Generated_Source\PSoC4/PWM.c ****     *  None
 510:Generated_Source\PSoC4/PWM.c ****     *
 511:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM.c ****     *  This function is only available if the PWM mode parameter is set to
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 13


 513:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM.c ****     *
 515:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC4/PWM.c ****                                        
 518:Generated_Source\PSoC4/PWM.c ****     {
 173              		.loc 1 518 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 519:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM.c ****         #else
 522:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 179              		.loc 1 522 0
 180 0000 014B     		ldr	r3, .L17
 181 0002 1880     		strh	r0, [r3]
 523:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****         #if (PWM_PWMMode == PWM__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM.c ****             #else
 529:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_PWMMode == PWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM.c ****     }
 182              		.loc 1 532 0
 183              		@ sp needed
 184 0004 7047     		bx	lr
 185              	.L18:
 186 0006 C046     		.align	2
 187              	.L17:
 188 0008 40100F40 		.word	1074729024
 189              		.cfi_endproc
 190              	.LFE9:
 191              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 192              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 193              		.align	2
 194              		.global	PWM_SetInterruptMode
 195              		.code	16
 196              		.thumb_func
 197              		.type	PWM_SetInterruptMode, %function
 198              	PWM_SetInterruptMode:
 199              	.LFB10:
 533:Generated_Source\PSoC4/PWM.c **** 
 534:Generated_Source\PSoC4/PWM.c **** 
 535:Generated_Source\PSoC4/PWM.c **** #else
 536:Generated_Source\PSoC4/PWM.c **** 
 537:Generated_Source\PSoC4/PWM.c **** 
 538:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare1
 540:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM.c ****     *
 542:Generated_Source\PSoC4/PWM.c ****     * Summary:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 14


 543:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM.c ****     *
 548:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM.c ****     *
 551:Generated_Source\PSoC4/PWM.c ****     * Return:
 552:Generated_Source\PSoC4/PWM.c ****     *  None
 553:Generated_Source\PSoC4/PWM.c ****     *
 554:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC4/PWM.c ****                                         
 557:Generated_Source\PSoC4/PWM.c ****     {
 558:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM.c ****         #else
 561:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM.c ****     }
 564:Generated_Source\PSoC4/PWM.c **** 
 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare2
 568:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c ****     *
 570:Generated_Source\PSoC4/PWM.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM.c ****     *
 577:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM.c ****     *
 580:Generated_Source\PSoC4/PWM.c ****     * Return:
 581:Generated_Source\PSoC4/PWM.c ****     *  None
 582:Generated_Source\PSoC4/PWM.c ****     *
 583:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC4/PWM.c ****                                         
 586:Generated_Source\PSoC4/PWM.c ****     {
 587:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM.c ****         #else
 590:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM.c ****     }
 593:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM.c **** 
 595:Generated_Source\PSoC4/PWM.c **** #if (PWM_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM.c **** 
 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteDeadTime
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 15


 600:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM.c ****     *
 602:Generated_Source\PSoC4/PWM.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM.c ****     *
 605:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM.c ****     *
 608:Generated_Source\PSoC4/PWM.c ****     * Return:
 609:Generated_Source\PSoC4/PWM.c ****     *  None
 610:Generated_Source\PSoC4/PWM.c ****     *
 611:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM.c ****     {
 614:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM.c ****         #else
 618:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM.c ****             PWM_DEADBAND_COUNT &= ((uint8)(~PWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM.c **** 
 622:Generated_Source\PSoC4/PWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/PWM.c ****                                                     PWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM.c ****             #else
 627:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= deadtime & PWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM.c **** 
 630:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM.c ****     }
 632:Generated_Source\PSoC4/PWM.c **** 
 633:Generated_Source\PSoC4/PWM.c **** 
 634:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadDeadTime
 636:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM.c ****     *
 638:Generated_Source\PSoC4/PWM.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM.c ****     *
 641:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM.c ****     *  None
 643:Generated_Source\PSoC4/PWM.c ****     *
 644:Generated_Source\PSoC4/PWM.c ****     * Return:
 645:Generated_Source\PSoC4/PWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM.c ****     *
 647:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM.c ****     {
 650:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG8(PWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM.c ****         #else
 654:Generated_Source\PSoC4/PWM.c **** 
 655:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 16


 657:Generated_Source\PSoC4/PWM.c ****                 return ((uint8)(((uint8)(PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/PWM.c ****                                                                            PWM_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC4/PWM.c ****             #else
 660:Generated_Source\PSoC4/PWM.c ****                 return (PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM.c ****     }
 664:Generated_Source\PSoC4/PWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM.c **** 
 666:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseStatus || PWM_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c **** 
 669:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetInterruptMode
 671:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM.c ****     *
 673:Generated_Source\PSoC4/PWM.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM.c ****     *
 677:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM.c ****     *
 680:Generated_Source\PSoC4/PWM.c ****     * Return:
 681:Generated_Source\PSoC4/PWM.c ****     *  None
 682:Generated_Source\PSoC4/PWM.c ****     *
 683:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM.c ****     void PWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM.c ****     {
 200              		.loc 1 685 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LVL3:
 686:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_STATUS_MASK_PTR, interruptMode);
 206              		.loc 1 686 0
 207 0000 014B     		ldr	r3, .L20
 208 0002 1870     		strb	r0, [r3]
 687:Generated_Source\PSoC4/PWM.c ****     }
 209              		.loc 1 687 0
 210              		@ sp needed
 211 0004 7047     		bx	lr
 212              	.L21:
 213 0006 C046     		.align	2
 214              	.L20:
 215 0008 81000F40 		.word	1074724993
 216              		.cfi_endproc
 217              	.LFE10:
 218              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 219              		.section	.text.PWM_ReadStatusRegister,"ax",%progbits
 220              		.align	2
 221              		.global	PWM_ReadStatusRegister
 222              		.code	16
 223              		.thumb_func
 224              		.type	PWM_ReadStatusRegister, %function
 225              	PWM_ReadStatusRegister:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 17


 226              	.LFB11:
 688:Generated_Source\PSoC4/PWM.c **** 
 689:Generated_Source\PSoC4/PWM.c **** 
 690:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM.c ****     *
 694:Generated_Source\PSoC4/PWM.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM.c ****     *
 697:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM.c ****     *  None
 699:Generated_Source\PSoC4/PWM.c ****     *
 700:Generated_Source\PSoC4/PWM.c ****     * Return:
 701:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM.c ****     *
 710:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM.c ****     {
 227              		.loc 1 712 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 713:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_STATUS_PTR));
 232              		.loc 1 713 0
 233 0000 014B     		ldr	r3, .L23
 234 0002 1878     		ldrb	r0, [r3]
 235 0004 C0B2     		uxtb	r0, r0
 714:Generated_Source\PSoC4/PWM.c ****     }
 236              		.loc 1 714 0
 237              		@ sp needed
 238 0006 7047     		bx	lr
 239              	.L24:
 240              		.align	2
 241              	.L23:
 242 0008 61000F40 		.word	1074724961
 243              		.cfi_endproc
 244              	.LFE11:
 245              		.size	PWM_ReadStatusRegister, .-PWM_ReadStatusRegister
 246              		.section	.text.PWM_ReadControlRegister,"ax",%progbits
 247              		.align	2
 248              		.global	PWM_ReadControlRegister
 249              		.code	16
 250              		.thumb_func
 251              		.type	PWM_ReadControlRegister, %function
 252              	PWM_ReadControlRegister:
 253              	.LFB12:
 715:Generated_Source\PSoC4/PWM.c **** 
 716:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 18


 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseControl)
 720:Generated_Source\PSoC4/PWM.c **** 
 721:Generated_Source\PSoC4/PWM.c **** 
 722:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadControlRegister
 724:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM.c ****     *
 726:Generated_Source\PSoC4/PWM.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM.c ****     *
 730:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM.c ****     *  None
 732:Generated_Source\PSoC4/PWM.c ****     *
 733:Generated_Source\PSoC4/PWM.c ****     * Return:
 734:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM.c ****     *
 736:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM.c ****     {
 254              		.loc 1 738 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 739:Generated_Source\PSoC4/PWM.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM.c **** 
 741:Generated_Source\PSoC4/PWM.c ****         result = CY_GET_REG8(PWM_CONTROL_PTR);
 259              		.loc 1 741 0
 260 0000 014B     		ldr	r3, .L26
 261 0002 1878     		ldrb	r0, [r3]
 262 0004 C0B2     		uxtb	r0, r0
 263              	.LVL4:
 742:Generated_Source\PSoC4/PWM.c ****         return (result);
 743:Generated_Source\PSoC4/PWM.c ****     }
 264              		.loc 1 743 0
 265              		@ sp needed
 266 0006 7047     		bx	lr
 267              	.L27:
 268              		.align	2
 269              	.L26:
 270 0008 71000F40 		.word	1074724977
 271              		.cfi_endproc
 272              	.LFE12:
 273              		.size	PWM_ReadControlRegister, .-PWM_ReadControlRegister
 274              		.section	.text.PWM_WriteControlRegister,"ax",%progbits
 275              		.align	2
 276              		.global	PWM_WriteControlRegister
 277              		.code	16
 278              		.thumb_func
 279              		.type	PWM_WriteControlRegister, %function
 280              	PWM_WriteControlRegister:
 281              	.LFB13:
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 19


 746:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteControlRegister
 748:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM.c ****     *
 750:Generated_Source\PSoC4/PWM.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/PWM.c ****     *
 754:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM.c ****     *
 761:Generated_Source\PSoC4/PWM.c ****     * Return:
 762:Generated_Source\PSoC4/PWM.c ****     *  None
 763:Generated_Source\PSoC4/PWM.c ****     *
 764:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM.c ****     {
 282              		.loc 1 766 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL5:
 767:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_CONTROL_PTR, control);
 288              		.loc 1 767 0
 289 0000 014B     		ldr	r3, .L29
 290 0002 1870     		strb	r0, [r3]
 768:Generated_Source\PSoC4/PWM.c ****     }
 291              		.loc 1 768 0
 292              		@ sp needed
 293 0004 7047     		bx	lr
 294              	.L30:
 295 0006 C046     		.align	2
 296              	.L29:
 297 0008 71000F40 		.word	1074724977
 298              		.cfi_endproc
 299              	.LFE13:
 300              		.size	PWM_WriteControlRegister, .-PWM_WriteControlRegister
 301              		.section	.text.PWM_ReadCapture,"ax",%progbits
 302              		.align	2
 303              		.global	PWM_ReadCapture
 304              		.code	16
 305              		.thumb_func
 306              		.type	PWM_ReadCapture, %function
 307              	PWM_ReadCapture:
 308              	.LFB14:
 769:Generated_Source\PSoC4/PWM.c **** 
 770:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseControl) */
 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** 
 773:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM.c **** 
 775:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 20


 776:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCapture
 778:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM.c ****     *
 780:Generated_Source\PSoC4/PWM.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM.c ****     *
 783:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM.c ****     *  None
 785:Generated_Source\PSoC4/PWM.c ****     *
 786:Generated_Source\PSoC4/PWM.c ****     * Return:
 787:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM.c ****     *
 789:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM.c ****     {
 309              		.loc 1 791 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 792:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 314              		.loc 1 792 0
 315 0000 014B     		ldr	r3, .L32
 316 0002 1888     		ldrh	r0, [r3]
 317 0004 80B2     		uxth	r0, r0
 793:Generated_Source\PSoC4/PWM.c ****     }
 318              		.loc 1 793 0
 319              		@ sp needed
 320 0006 7047     		bx	lr
 321              	.L33:
 322              		.align	2
 323              	.L32:
 324 0008 A0100F40 		.word	1074729120
 325              		.cfi_endproc
 326              	.LFE14:
 327              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 328              		.section	.text.PWM_ClearFIFO,"ax",%progbits
 329              		.align	2
 330              		.global	PWM_ClearFIFO
 331              		.code	16
 332              		.thumb_func
 333              		.type	PWM_ClearFIFO, %function
 334              	PWM_ClearFIFO:
 335              	.LFB7:
 454:Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 336              		.loc 1 454 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 10B5     		push	{r4, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 4, -8
 343              		.cfi_offset 14, -4
 455:Generated_Source\PSoC4/PWM.c ****             {
 344              		.loc 1 455 0
 345 0002 01E0     		b	.L35
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 21


 346              	.L36:
 457:Generated_Source\PSoC4/PWM.c ****             }
 347              		.loc 1 457 0
 348 0004 FFF7FEFF 		bl	PWM_ReadCapture
 349              	.LVL6:
 350              	.L35:
 455:Generated_Source\PSoC4/PWM.c ****             {
 351              		.loc 1 455 0
 352 0008 FFF7FEFF 		bl	PWM_ReadStatusRegister
 353              	.LVL7:
 354 000c C306     		lsls	r3, r0, #27
 355 000e F9D4     		bmi	.L36
 459:Generated_Source\PSoC4/PWM.c **** 
 356              		.loc 1 459 0
 357              		@ sp needed
 358 0010 10BD     		pop	{r4, pc}
 359              		.cfi_endproc
 360              	.LFE7:
 361              		.size	PWM_ClearFIFO, .-PWM_ClearFIFO
 362 0012 C046     		.section	.text.PWM_Init,"ax",%progbits
 363              		.align	2
 364              		.global	PWM_Init
 365              		.code	16
 366              		.thumb_func
 367              		.type	PWM_Init, %function
 368              	PWM_Init:
 369              	.LFB2:
  85:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
 370              		.loc 1 85 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 70B5     		push	{r4, r5, r6, lr}
 375              		.cfi_def_cfa_offset 16
 376              		.cfi_offset 4, -16
 377              		.cfi_offset 5, -12
 378              		.cfi_offset 6, -8
 379              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 380              		.loc 1 117 0
 381 0002 1749     		ldr	r1, .L38
 382 0004 0B78     		ldrb	r3, [r1]
 383 0006 3F22     		movs	r2, #63
 384 0008 9343     		bics	r3, r2
 385              	.LVL8:
 119:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 386              		.loc 1 119 0
 387 000a 0922     		movs	r2, #9
 388 000c 1343     		orrs	r3, r2
 389              	.LVL9:
 390 000e DBB2     		uxtb	r3, r3
 391 0010 0B70     		strb	r3, [r1]
 129:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 392              		.loc 1 129 0
 393 0012 1449     		ldr	r1, .L38+4
 394 0014 0A78     		ldrb	r2, [r1]
 395 0016 0123     		movs	r3, #1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 22


 396 0018 1A43     		orrs	r2, r3
 397 001a D2B2     		uxtb	r2, r2
 398 001c 0A70     		strb	r2, [r1]
 130:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 399              		.loc 1 130 0
 400 001e 124C     		ldr	r4, .L38+8
 401 0020 2278     		ldrb	r2, [r4]
 402 0022 1343     		orrs	r3, r2
 403 0024 DBB2     		uxtb	r3, r3
 404 0026 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 405              		.loc 1 133 0
 406 0028 FA25     		movs	r5, #250
 407 002a AD00     		lsls	r5, r5, #2
 408 002c 2800     		movs	r0, r5
 409 002e FFF7FEFF 		bl	PWM_WriteCounter
 410              	.LVL10:
 136:Generated_Source\PSoC4/PWM.c **** 
 411              		.loc 1 136 0
 412 0032 2800     		movs	r0, r5
 413 0034 FFF7FEFF 		bl	PWM_WritePeriod
 414              	.LVL11:
 139:Generated_Source\PSoC4/PWM.c ****         #else
 415              		.loc 1 139 0
 416 0038 FA20     		movs	r0, #250
 417 003a 4000     		lsls	r0, r0, #1
 418 003c FFF7FEFF 		bl	PWM_WriteCompare
 419              	.LVL12:
 154:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 420              		.loc 1 154 0
 421 0040 0020     		movs	r0, #0
 422 0042 FFF7FEFF 		bl	PWM_SetInterruptMode
 423              	.LVL13:
 167:Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 424              		.loc 1 167 0
 425 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 426              	.LVL14:
 169:Generated_Source\PSoC4/PWM.c **** 
 427              		.loc 1 169 0
 428 004a 2278     		ldrb	r2, [r4]
 429 004c 1023     		movs	r3, #16
 430 004e 1343     		orrs	r3, r2
 431 0050 DBB2     		uxtb	r3, r3
 432 0052 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC4/PWM.c **** 
 433              		.loc 1 172 0
 434 0054 FFF7FEFF 		bl	CyExitCriticalSection
 435              	.LVL15:
 176:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 436              		.loc 1 176 0
 437 0058 FFF7FEFF 		bl	PWM_ClearFIFO
 438              	.LVL16:
 179:Generated_Source\PSoC4/PWM.c **** 
 439              		.loc 1 179 0
 440              		@ sp needed
 441 005c 70BD     		pop	{r4, r5, r6, pc}
 442              	.L39:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 23


 443 005e C046     		.align	2
 444              	.L38:
 445 0060 71000F40 		.word	1074724977
 446 0064 90000F40 		.word	1074725008
 447 0068 91000F40 		.word	1074725009
 448              		.cfi_endproc
 449              	.LFE2:
 450              		.size	PWM_Init, .-PWM_Init
 451              		.section	.text.PWM_Start,"ax",%progbits
 452              		.align	2
 453              		.global	PWM_Start
 454              		.code	16
 455              		.thumb_func
 456              		.type	PWM_Start, %function
 457              	PWM_Start:
 458              	.LFB1:
  56:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
 459              		.loc 1 56 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463 0000 10B5     		push	{r4, lr}
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 4, -8
 466              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/PWM.c ****     {
 467              		.loc 1 58 0
 468 0002 064B     		ldr	r3, .L42
 469 0004 1B78     		ldrb	r3, [r3]
 470 0006 002B     		cmp	r3, #0
 471 0008 04D1     		bne	.L41
  60:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 472              		.loc 1 60 0
 473 000a FFF7FEFF 		bl	PWM_Init
 474              	.LVL17:
  61:Generated_Source\PSoC4/PWM.c ****     }
 475              		.loc 1 61 0
 476 000e 0122     		movs	r2, #1
 477 0010 024B     		ldr	r3, .L42
 478 0012 1A70     		strb	r2, [r3]
 479              	.L41:
  63:Generated_Source\PSoC4/PWM.c **** 
 480              		.loc 1 63 0
 481 0014 FFF7FEFF 		bl	PWM_Enable
 482              	.LVL18:
  65:Generated_Source\PSoC4/PWM.c **** 
 483              		.loc 1 65 0
 484              		@ sp needed
 485 0018 10BD     		pop	{r4, pc}
 486              	.L43:
 487 001a C046     		.align	2
 488              	.L42:
 489 001c 00000000 		.word	.LANCHOR0
 490              		.cfi_endproc
 491              	.LFE1:
 492              		.size	PWM_Start, .-PWM_Start
 493              		.section	.text.PWM_ReadCompare,"ax",%progbits
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 24


 494              		.align	2
 495              		.global	PWM_ReadCompare
 496              		.code	16
 497              		.thumb_func
 498              		.type	PWM_ReadCompare, %function
 499              	PWM_ReadCompare:
 500              	.LFB15:
 794:Generated_Source\PSoC4/PWM.c **** 
 795:Generated_Source\PSoC4/PWM.c **** #endif /* (!PWM_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM.c **** 
 797:Generated_Source\PSoC4/PWM.c **** 
 798:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM.c **** 
 800:Generated_Source\PSoC4/PWM.c **** 
 801:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare
 803:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM.c ****     *
 805:Generated_Source\PSoC4/PWM.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM.c ****     *
 809:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM.c ****     *  None
 811:Generated_Source\PSoC4/PWM.c ****     *
 812:Generated_Source\PSoC4/PWM.c ****     * Return:
 813:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM.c ****     *
 815:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM.c ****     {
 501              		.loc 1 817 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 818:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM.c ****             return ((uint16)CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM.c ****         #else
 821:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 506              		.loc 1 821 0
 507 0000 014B     		ldr	r3, .L45
 508 0002 1888     		ldrh	r0, [r3]
 509 0004 80B2     		uxth	r0, r0
 822:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM.c ****     }
 510              		.loc 1 823 0
 511              		@ sp needed
 512 0006 7047     		bx	lr
 513              	.L46:
 514              		.align	2
 515              	.L45:
 516 0008 40100F40 		.word	1074729024
 517              		.cfi_endproc
 518              	.LFE15:
 519              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 520              		.section	.text.PWM_ReadPeriod,"ax",%progbits
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 25


 521              		.align	2
 522              		.global	PWM_ReadPeriod
 523              		.code	16
 524              		.thumb_func
 525              		.type	PWM_ReadPeriod, %function
 526              	PWM_ReadPeriod:
 527              	.LFB16:
 824:Generated_Source\PSoC4/PWM.c **** 
 825:Generated_Source\PSoC4/PWM.c **** #else
 826:Generated_Source\PSoC4/PWM.c **** 
 827:Generated_Source\PSoC4/PWM.c **** 
 828:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare1
 830:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM.c ****     *
 832:Generated_Source\PSoC4/PWM.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM.c ****     *
 835:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM.c ****     *  None
 837:Generated_Source\PSoC4/PWM.c ****     *
 838:Generated_Source\PSoC4/PWM.c ****     * Return:
 839:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM.c ****     *
 841:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM.c ****     {
 844:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/PWM.c ****     }
 846:Generated_Source\PSoC4/PWM.c **** 
 847:Generated_Source\PSoC4/PWM.c **** 
 848:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare2
 850:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM.c ****     *
 852:Generated_Source\PSoC4/PWM.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM.c ****     *
 855:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM.c ****     *  None
 857:Generated_Source\PSoC4/PWM.c ****     *
 858:Generated_Source\PSoC4/PWM.c ****     * Return:
 859:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM.c ****     *
 861:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM.c ****     {
 864:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/PWM.c ****     }
 866:Generated_Source\PSoC4/PWM.c **** 
 867:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM.c **** 
 869:Generated_Source\PSoC4/PWM.c **** 
 870:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 872:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 26


 874:Generated_Source\PSoC4/PWM.c **** * Summary:
 875:Generated_Source\PSoC4/PWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM.c **** *
 877:Generated_Source\PSoC4/PWM.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM.c **** *  None
 879:Generated_Source\PSoC4/PWM.c **** *
 880:Generated_Source\PSoC4/PWM.c **** * Return:
 881:Generated_Source\PSoC4/PWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM.c **** *
 883:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM.c **** uint16 PWM_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM.c **** {
 528              		.loc 1 885 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 886:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM.c ****         return ((uint16)CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM.c ****     #else
 889:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 533              		.loc 1 889 0
 534 0000 014B     		ldr	r3, .L48
 535 0002 1888     		ldrh	r0, [r3]
 536 0004 80B2     		uxth	r0, r0
 890:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM.c **** }
 537              		.loc 1 891 0
 538              		@ sp needed
 539 0006 7047     		bx	lr
 540              	.L49:
 541              		.align	2
 542              	.L48:
 543 0008 80100F40 		.word	1074729088
 544              		.cfi_endproc
 545              	.LFE16:
 546              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 547              		.global	PWM_initVar
 548              		.bss
 549              		.set	.LANCHOR0,. + 0
 550              		.type	PWM_initVar, %object
 551              		.size	PWM_initVar, 1
 552              	PWM_initVar:
 553 0000 00       		.space	1
 554              		.text
 555              	.Letext0:
 556              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 557              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 558              		.section	.debug_info,"",%progbits
 559              	.Ldebug_info0:
 560 0000 4E030000 		.4byte	0x34e
 561 0004 0400     		.2byte	0x4
 562 0006 00000000 		.4byte	.Ldebug_abbrev0
 563 000a 04       		.byte	0x4
 564 000b 01       		.uleb128 0x1
 565 000c 3D010000 		.4byte	.LASF43
 566 0010 0C       		.byte	0xc
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 27


 567 0011 82020000 		.4byte	.LASF44
 568 0015 CF020000 		.4byte	.LASF45
 569 0019 00000000 		.4byte	.Ldebug_ranges0+0
 570 001d 00000000 		.4byte	0
 571 0021 00000000 		.4byte	.Ldebug_line0
 572 0025 02       		.uleb128 0x2
 573 0026 01       		.byte	0x1
 574 0027 06       		.byte	0x6
 575 0028 C3020000 		.4byte	.LASF0
 576 002c 02       		.uleb128 0x2
 577 002d 01       		.byte	0x1
 578 002e 08       		.byte	0x8
 579 002f 8E000000 		.4byte	.LASF1
 580 0033 02       		.uleb128 0x2
 581 0034 02       		.byte	0x2
 582 0035 05       		.byte	0x5
 583 0036 50020000 		.4byte	.LASF2
 584 003a 02       		.uleb128 0x2
 585 003b 02       		.byte	0x2
 586 003c 07       		.byte	0x7
 587 003d 46000000 		.4byte	.LASF3
 588 0041 02       		.uleb128 0x2
 589 0042 04       		.byte	0x4
 590 0043 05       		.byte	0x5
 591 0044 74020000 		.4byte	.LASF4
 592 0048 02       		.uleb128 0x2
 593 0049 04       		.byte	0x4
 594 004a 07       		.byte	0x7
 595 004b A1000000 		.4byte	.LASF5
 596 004f 02       		.uleb128 0x2
 597 0050 08       		.byte	0x8
 598 0051 05       		.byte	0x5
 599 0052 F9010000 		.4byte	.LASF6
 600 0056 02       		.uleb128 0x2
 601 0057 08       		.byte	0x8
 602 0058 07       		.byte	0x7
 603 0059 77000000 		.4byte	.LASF7
 604 005d 03       		.uleb128 0x3
 605 005e 04       		.byte	0x4
 606 005f 05       		.byte	0x5
 607 0060 696E7400 		.ascii	"int\000"
 608 0064 02       		.uleb128 0x2
 609 0065 04       		.byte	0x4
 610 0066 07       		.byte	0x7
 611 0067 13010000 		.4byte	.LASF8
 612 006b 04       		.uleb128 0x4
 613 006c C3000000 		.4byte	.LASF9
 614 0070 02       		.byte	0x2
 615 0071 E401     		.2byte	0x1e4
 616 0073 2C000000 		.4byte	0x2c
 617 0077 04       		.uleb128 0x4
 618 0078 E9000000 		.4byte	.LASF10
 619 007c 02       		.byte	0x2
 620 007d E501     		.2byte	0x1e5
 621 007f 3A000000 		.4byte	0x3a
 622 0083 02       		.uleb128 0x2
 623 0084 04       		.byte	0x4
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 28


 624 0085 04       		.byte	0x4
 625 0086 69000000 		.4byte	.LASF11
 626 008a 02       		.uleb128 0x2
 627 008b 08       		.byte	0x8
 628 008c 04       		.byte	0x4
 629 008d D1000000 		.4byte	.LASF12
 630 0091 02       		.uleb128 0x2
 631 0092 01       		.byte	0x1
 632 0093 08       		.byte	0x8
 633 0094 7D020000 		.4byte	.LASF13
 634 0098 04       		.uleb128 0x4
 635 0099 9C000000 		.4byte	.LASF14
 636 009d 02       		.byte	0x2
 637 009e 8E02     		.2byte	0x28e
 638 00a0 A4000000 		.4byte	0xa4
 639 00a4 05       		.uleb128 0x5
 640 00a5 6B000000 		.4byte	0x6b
 641 00a9 04       		.uleb128 0x4
 642 00aa 00000000 		.4byte	.LASF15
 643 00ae 02       		.byte	0x2
 644 00af 8F02     		.2byte	0x28f
 645 00b1 B5000000 		.4byte	0xb5
 646 00b5 05       		.uleb128 0x5
 647 00b6 77000000 		.4byte	0x77
 648 00ba 02       		.uleb128 0x2
 649 00bb 08       		.byte	0x8
 650 00bc 04       		.byte	0x4
 651 00bd 9F020000 		.4byte	.LASF16
 652 00c1 02       		.uleb128 0x2
 653 00c2 04       		.byte	0x4
 654 00c3 07       		.byte	0x7
 655 00c4 F0010000 		.4byte	.LASF17
 656 00c8 06       		.uleb128 0x6
 657 00c9 FC020000 		.4byte	.LASF18
 658 00cd 01       		.byte	0x1
 659 00ce C7       		.byte	0xc7
 660 00cf 00000000 		.4byte	.LFB3
 661 00d3 14000000 		.4byte	.LFE3-.LFB3
 662 00d7 01       		.uleb128 0x1
 663 00d8 9C       		.byte	0x9c
 664 00d9 06       		.uleb128 0x6
 665 00da 6B020000 		.4byte	.LASF19
 666 00de 01       		.byte	0x1
 667 00df E9       		.byte	0xe9
 668 00e0 00000000 		.4byte	.LFB4
 669 00e4 10000000 		.4byte	.LFE4-.LFB4
 670 00e8 01       		.uleb128 0x1
 671 00e9 9C       		.byte	0x9c
 672 00ea 07       		.uleb128 0x7
 673 00eb 5A020000 		.4byte	.LASF20
 674 00ef 01       		.byte	0x1
 675 00f0 9301     		.2byte	0x193
 676 00f2 00000000 		.4byte	.LFB5
 677 00f6 0C000000 		.4byte	.LFE5-.LFB5
 678 00fa 01       		.uleb128 0x1
 679 00fb 9C       		.byte	0x9c
 680 00fc 0F010000 		.4byte	0x10f
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 29


 681 0100 08       		.uleb128 0x8
 682 0101 6F000000 		.4byte	.LASF22
 683 0105 01       		.byte	0x1
 684 0106 9301     		.2byte	0x193
 685 0108 77000000 		.4byte	0x77
 686 010c 01       		.uleb128 0x1
 687 010d 50       		.byte	0x50
 688 010e 00       		.byte	0
 689 010f 09       		.uleb128 0x9
 690 0110 B3000000 		.4byte	.LASF28
 691 0114 01       		.byte	0x1
 692 0115 A901     		.2byte	0x1a9
 693 0117 77000000 		.4byte	0x77
 694 011b 00000000 		.4byte	.LFB6
 695 011f 14000000 		.4byte	.LFE6-.LFB6
 696 0123 01       		.uleb128 0x1
 697 0124 9C       		.byte	0x9c
 698 0125 07       		.uleb128 0x7
 699 0126 CB010000 		.4byte	.LASF21
 700 012a 01       		.byte	0x1
 701 012b E201     		.2byte	0x1e2
 702 012d 00000000 		.4byte	.LFB8
 703 0131 0C000000 		.4byte	.LFE8-.LFB8
 704 0135 01       		.uleb128 0x1
 705 0136 9C       		.byte	0x9c
 706 0137 4A010000 		.4byte	0x14a
 707 013b 08       		.uleb128 0x8
 708 013c 35000000 		.4byte	.LASF23
 709 0140 01       		.byte	0x1
 710 0141 E201     		.2byte	0x1e2
 711 0143 77000000 		.4byte	0x77
 712 0147 01       		.uleb128 0x1
 713 0148 50       		.byte	0x50
 714 0149 00       		.byte	0
 715 014a 07       		.uleb128 0x7
 716 014b D8000000 		.4byte	.LASF24
 717 014f 01       		.byte	0x1
 718 0150 0402     		.2byte	0x204
 719 0152 00000000 		.4byte	.LFB9
 720 0156 0C000000 		.4byte	.LFE9-.LFB9
 721 015a 01       		.uleb128 0x1
 722 015b 9C       		.byte	0x9c
 723 015c 6F010000 		.4byte	0x16f
 724 0160 08       		.uleb128 0x8
 725 0161 2D000000 		.4byte	.LASF25
 726 0165 01       		.byte	0x1
 727 0166 0402     		.2byte	0x204
 728 0168 77000000 		.4byte	0x77
 729 016c 01       		.uleb128 0x1
 730 016d 50       		.byte	0x50
 731 016e 00       		.byte	0
 732 016f 07       		.uleb128 0x7
 733 0170 DB010000 		.4byte	.LASF26
 734 0174 01       		.byte	0x1
 735 0175 AC02     		.2byte	0x2ac
 736 0177 00000000 		.4byte	.LFB10
 737 017b 0C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 30


 738 017f 01       		.uleb128 0x1
 739 0180 9C       		.byte	0x9c
 740 0181 94010000 		.4byte	0x194
 741 0185 08       		.uleb128 0x8
 742 0186 07020000 		.4byte	.LASF27
 743 018a 01       		.byte	0x1
 744 018b AC02     		.2byte	0x2ac
 745 018d 6B000000 		.4byte	0x6b
 746 0191 01       		.uleb128 0x1
 747 0192 50       		.byte	0x50
 748 0193 00       		.byte	0
 749 0194 09       		.uleb128 0x9
 750 0195 07030000 		.4byte	.LASF29
 751 0199 01       		.byte	0x1
 752 019a C702     		.2byte	0x2c7
 753 019c 6B000000 		.4byte	0x6b
 754 01a0 00000000 		.4byte	.LFB11
 755 01a4 0C000000 		.4byte	.LFE11-.LFB11
 756 01a8 01       		.uleb128 0x1
 757 01a9 9C       		.byte	0x9c
 758 01aa 0A       		.uleb128 0xa
 759 01ab AB020000 		.4byte	.LASF46
 760 01af 01       		.byte	0x1
 761 01b0 E102     		.2byte	0x2e1
 762 01b2 6B000000 		.4byte	0x6b
 763 01b6 00000000 		.4byte	.LFB12
 764 01ba 0C000000 		.4byte	.LFE12-.LFB12
 765 01be 01       		.uleb128 0x1
 766 01bf 9C       		.byte	0x9c
 767 01c0 D3010000 		.4byte	0x1d3
 768 01c4 0B       		.uleb128 0xb
 769 01c5 36010000 		.4byte	.LASF35
 770 01c9 01       		.byte	0x1
 771 01ca E302     		.2byte	0x2e3
 772 01cc 6B000000 		.4byte	0x6b
 773 01d0 01       		.uleb128 0x1
 774 01d1 50       		.byte	0x50
 775 01d2 00       		.byte	0
 776 01d3 07       		.uleb128 0x7
 777 01d4 15020000 		.4byte	.LASF30
 778 01d8 01       		.byte	0x1
 779 01d9 FD02     		.2byte	0x2fd
 780 01db 00000000 		.4byte	.LFB13
 781 01df 0C000000 		.4byte	.LFE13-.LFB13
 782 01e3 01       		.uleb128 0x1
 783 01e4 9C       		.byte	0x9c
 784 01e5 F8010000 		.4byte	0x1f8
 785 01e9 08       		.uleb128 0x8
 786 01ea C9000000 		.4byte	.LASF31
 787 01ee 01       		.byte	0x1
 788 01ef FD02     		.2byte	0x2fd
 789 01f1 6B000000 		.4byte	0x6b
 790 01f5 01       		.uleb128 0x1
 791 01f6 50       		.byte	0x50
 792 01f7 00       		.byte	0
 793 01f8 09       		.uleb128 0x9
 794 01f9 59000000 		.4byte	.LASF32
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 31


 795 01fd 01       		.byte	0x1
 796 01fe 1603     		.2byte	0x316
 797 0200 77000000 		.4byte	0x77
 798 0204 00000000 		.4byte	.LFB14
 799 0208 0C000000 		.4byte	.LFE14-.LFB14
 800 020c 01       		.uleb128 0x1
 801 020d 9C       		.byte	0x9c
 802 020e 07       		.uleb128 0x7
 803 020f 1F000000 		.4byte	.LASF33
 804 0213 01       		.byte	0x1
 805 0214 C501     		.2byte	0x1c5
 806 0216 00000000 		.4byte	.LFB7
 807 021a 12000000 		.4byte	.LFE7-.LFB7
 808 021e 01       		.uleb128 0x1
 809 021f 9C       		.byte	0x9c
 810 0220 37020000 		.4byte	0x237
 811 0224 0C       		.uleb128 0xc
 812 0225 08000000 		.4byte	.LVL6
 813 0229 F8010000 		.4byte	0x1f8
 814 022d 0C       		.uleb128 0xc
 815 022e 0C000000 		.4byte	.LVL7
 816 0232 94010000 		.4byte	0x194
 817 0236 00       		.byte	0
 818 0237 0D       		.uleb128 0xd
 819 0238 16000000 		.4byte	.LASF34
 820 023c 01       		.byte	0x1
 821 023d 54       		.byte	0x54
 822 023e 00000000 		.4byte	.LFB2
 823 0242 6C000000 		.4byte	.LFE2-.LFB2
 824 0246 01       		.uleb128 0x1
 825 0247 9C       		.byte	0x9c
 826 0248 D6020000 		.4byte	0x2d6
 827 024c 0E       		.uleb128 0xe
 828 024d 1E030000 		.4byte	.LASF36
 829 0251 01       		.byte	0x1
 830 0252 57       		.byte	0x57
 831 0253 6B000000 		.4byte	0x6b
 832 0257 00000000 		.4byte	.LLST0
 833 025b 0E       		.uleb128 0xe
 834 025c 2E020000 		.4byte	.LASF37
 835 0260 01       		.byte	0x1
 836 0261 5D       		.byte	0x5d
 837 0262 6B000000 		.4byte	0x6b
 838 0266 13000000 		.4byte	.LLST1
 839 026a 0F       		.uleb128 0xf
 840 026b 32000000 		.4byte	.LVL10
 841 026f EA000000 		.4byte	0xea
 842 0273 7E020000 		.4byte	0x27e
 843 0277 10       		.uleb128 0x10
 844 0278 01       		.uleb128 0x1
 845 0279 50       		.byte	0x50
 846 027a 02       		.uleb128 0x2
 847 027b 75       		.byte	0x75
 848 027c 00       		.sleb128 0
 849 027d 00       		.byte	0
 850 027e 0F       		.uleb128 0xf
 851 027f 38000000 		.4byte	.LVL11
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 32


 852 0283 25010000 		.4byte	0x125
 853 0287 92020000 		.4byte	0x292
 854 028b 10       		.uleb128 0x10
 855 028c 01       		.uleb128 0x1
 856 028d 50       		.byte	0x50
 857 028e 02       		.uleb128 0x2
 858 028f 75       		.byte	0x75
 859 0290 00       		.sleb128 0
 860 0291 00       		.byte	0
 861 0292 0F       		.uleb128 0xf
 862 0293 40000000 		.4byte	.LVL12
 863 0297 4A010000 		.4byte	0x14a
 864 029b A7020000 		.4byte	0x2a7
 865 029f 10       		.uleb128 0x10
 866 02a0 01       		.uleb128 0x1
 867 02a1 50       		.byte	0x50
 868 02a2 03       		.uleb128 0x3
 869 02a3 0A       		.byte	0xa
 870 02a4 F401     		.2byte	0x1f4
 871 02a6 00       		.byte	0
 872 02a7 0F       		.uleb128 0xf
 873 02a8 46000000 		.4byte	.LVL13
 874 02ac 6F010000 		.4byte	0x16f
 875 02b0 BA020000 		.4byte	0x2ba
 876 02b4 10       		.uleb128 0x10
 877 02b5 01       		.uleb128 0x1
 878 02b6 50       		.byte	0x50
 879 02b7 01       		.uleb128 0x1
 880 02b8 30       		.byte	0x30
 881 02b9 00       		.byte	0
 882 02ba 0C       		.uleb128 0xc
 883 02bb 4A000000 		.4byte	.LVL14
 884 02bf 3B030000 		.4byte	0x33b
 885 02c3 0C       		.uleb128 0xc
 886 02c4 58000000 		.4byte	.LVL15
 887 02c8 46030000 		.4byte	0x346
 888 02cc 0C       		.uleb128 0xc
 889 02cd 5C000000 		.4byte	.LVL16
 890 02d1 0E020000 		.4byte	0x20e
 891 02d5 00       		.byte	0
 892 02d6 0D       		.uleb128 0xd
 893 02d7 3C000000 		.4byte	.LASF38
 894 02db 01       		.byte	0x1
 895 02dc 37       		.byte	0x37
 896 02dd 00000000 		.4byte	.LFB1
 897 02e1 20000000 		.4byte	.LFE1-.LFB1
 898 02e5 01       		.uleb128 0x1
 899 02e6 9C       		.byte	0x9c
 900 02e7 FE020000 		.4byte	0x2fe
 901 02eb 0C       		.uleb128 0xc
 902 02ec 0E000000 		.4byte	.LVL17
 903 02f0 37020000 		.4byte	0x237
 904 02f4 0C       		.uleb128 0xc
 905 02f5 18000000 		.4byte	.LVL18
 906 02f9 C8000000 		.4byte	0xc8
 907 02fd 00       		.byte	0
 908 02fe 09       		.uleb128 0x9
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 33


 909 02ff 06000000 		.4byte	.LASF39
 910 0303 01       		.byte	0x1
 911 0304 3003     		.2byte	0x330
 912 0306 77000000 		.4byte	0x77
 913 030a 00000000 		.4byte	.LFB15
 914 030e 0C000000 		.4byte	.LFE15-.LFB15
 915 0312 01       		.uleb128 0x1
 916 0313 9C       		.byte	0x9c
 917 0314 09       		.uleb128 0x9
 918 0315 41020000 		.4byte	.LASF40
 919 0319 01       		.byte	0x1
 920 031a 7403     		.2byte	0x374
 921 031c 77000000 		.4byte	0x77
 922 0320 00000000 		.4byte	.LFB16
 923 0324 0C000000 		.4byte	.LFE16-.LFB16
 924 0328 01       		.uleb128 0x1
 925 0329 9C       		.byte	0x9c
 926 032a 11       		.uleb128 0x11
 927 032b F0000000 		.4byte	.LASF47
 928 032f 01       		.byte	0x1
 929 0330 20       		.byte	0x20
 930 0331 6B000000 		.4byte	0x6b
 931 0335 05       		.uleb128 0x5
 932 0336 03       		.byte	0x3
 933 0337 00000000 		.4byte	PWM_initVar
 934 033b 12       		.uleb128 0x12
 935 033c FC000000 		.4byte	.LASF41
 936 0340 FC000000 		.4byte	.LASF41
 937 0344 03       		.byte	0x3
 938 0345 E5       		.byte	0xe5
 939 0346 12       		.uleb128 0x12
 940 0347 20010000 		.4byte	.LASF42
 941 034b 20010000 		.4byte	.LASF42
 942 034f 03       		.byte	0x3
 943 0350 E6       		.byte	0xe6
 944 0351 00       		.byte	0
 945              		.section	.debug_abbrev,"",%progbits
 946              	.Ldebug_abbrev0:
 947 0000 01       		.uleb128 0x1
 948 0001 11       		.uleb128 0x11
 949 0002 01       		.byte	0x1
 950 0003 25       		.uleb128 0x25
 951 0004 0E       		.uleb128 0xe
 952 0005 13       		.uleb128 0x13
 953 0006 0B       		.uleb128 0xb
 954 0007 03       		.uleb128 0x3
 955 0008 0E       		.uleb128 0xe
 956 0009 1B       		.uleb128 0x1b
 957 000a 0E       		.uleb128 0xe
 958 000b 55       		.uleb128 0x55
 959 000c 17       		.uleb128 0x17
 960 000d 11       		.uleb128 0x11
 961 000e 01       		.uleb128 0x1
 962 000f 10       		.uleb128 0x10
 963 0010 17       		.uleb128 0x17
 964 0011 00       		.byte	0
 965 0012 00       		.byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 34


 966 0013 02       		.uleb128 0x2
 967 0014 24       		.uleb128 0x24
 968 0015 00       		.byte	0
 969 0016 0B       		.uleb128 0xb
 970 0017 0B       		.uleb128 0xb
 971 0018 3E       		.uleb128 0x3e
 972 0019 0B       		.uleb128 0xb
 973 001a 03       		.uleb128 0x3
 974 001b 0E       		.uleb128 0xe
 975 001c 00       		.byte	0
 976 001d 00       		.byte	0
 977 001e 03       		.uleb128 0x3
 978 001f 24       		.uleb128 0x24
 979 0020 00       		.byte	0
 980 0021 0B       		.uleb128 0xb
 981 0022 0B       		.uleb128 0xb
 982 0023 3E       		.uleb128 0x3e
 983 0024 0B       		.uleb128 0xb
 984 0025 03       		.uleb128 0x3
 985 0026 08       		.uleb128 0x8
 986 0027 00       		.byte	0
 987 0028 00       		.byte	0
 988 0029 04       		.uleb128 0x4
 989 002a 16       		.uleb128 0x16
 990 002b 00       		.byte	0
 991 002c 03       		.uleb128 0x3
 992 002d 0E       		.uleb128 0xe
 993 002e 3A       		.uleb128 0x3a
 994 002f 0B       		.uleb128 0xb
 995 0030 3B       		.uleb128 0x3b
 996 0031 05       		.uleb128 0x5
 997 0032 49       		.uleb128 0x49
 998 0033 13       		.uleb128 0x13
 999 0034 00       		.byte	0
 1000 0035 00       		.byte	0
 1001 0036 05       		.uleb128 0x5
 1002 0037 35       		.uleb128 0x35
 1003 0038 00       		.byte	0
 1004 0039 49       		.uleb128 0x49
 1005 003a 13       		.uleb128 0x13
 1006 003b 00       		.byte	0
 1007 003c 00       		.byte	0
 1008 003d 06       		.uleb128 0x6
 1009 003e 2E       		.uleb128 0x2e
 1010 003f 00       		.byte	0
 1011 0040 3F       		.uleb128 0x3f
 1012 0041 19       		.uleb128 0x19
 1013 0042 03       		.uleb128 0x3
 1014 0043 0E       		.uleb128 0xe
 1015 0044 3A       		.uleb128 0x3a
 1016 0045 0B       		.uleb128 0xb
 1017 0046 3B       		.uleb128 0x3b
 1018 0047 0B       		.uleb128 0xb
 1019 0048 27       		.uleb128 0x27
 1020 0049 19       		.uleb128 0x19
 1021 004a 11       		.uleb128 0x11
 1022 004b 01       		.uleb128 0x1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 35


 1023 004c 12       		.uleb128 0x12
 1024 004d 06       		.uleb128 0x6
 1025 004e 40       		.uleb128 0x40
 1026 004f 18       		.uleb128 0x18
 1027 0050 9742     		.uleb128 0x2117
 1028 0052 19       		.uleb128 0x19
 1029 0053 00       		.byte	0
 1030 0054 00       		.byte	0
 1031 0055 07       		.uleb128 0x7
 1032 0056 2E       		.uleb128 0x2e
 1033 0057 01       		.byte	0x1
 1034 0058 3F       		.uleb128 0x3f
 1035 0059 19       		.uleb128 0x19
 1036 005a 03       		.uleb128 0x3
 1037 005b 0E       		.uleb128 0xe
 1038 005c 3A       		.uleb128 0x3a
 1039 005d 0B       		.uleb128 0xb
 1040 005e 3B       		.uleb128 0x3b
 1041 005f 05       		.uleb128 0x5
 1042 0060 27       		.uleb128 0x27
 1043 0061 19       		.uleb128 0x19
 1044 0062 11       		.uleb128 0x11
 1045 0063 01       		.uleb128 0x1
 1046 0064 12       		.uleb128 0x12
 1047 0065 06       		.uleb128 0x6
 1048 0066 40       		.uleb128 0x40
 1049 0067 18       		.uleb128 0x18
 1050 0068 9742     		.uleb128 0x2117
 1051 006a 19       		.uleb128 0x19
 1052 006b 01       		.uleb128 0x1
 1053 006c 13       		.uleb128 0x13
 1054 006d 00       		.byte	0
 1055 006e 00       		.byte	0
 1056 006f 08       		.uleb128 0x8
 1057 0070 05       		.uleb128 0x5
 1058 0071 00       		.byte	0
 1059 0072 03       		.uleb128 0x3
 1060 0073 0E       		.uleb128 0xe
 1061 0074 3A       		.uleb128 0x3a
 1062 0075 0B       		.uleb128 0xb
 1063 0076 3B       		.uleb128 0x3b
 1064 0077 05       		.uleb128 0x5
 1065 0078 49       		.uleb128 0x49
 1066 0079 13       		.uleb128 0x13
 1067 007a 02       		.uleb128 0x2
 1068 007b 18       		.uleb128 0x18
 1069 007c 00       		.byte	0
 1070 007d 00       		.byte	0
 1071 007e 09       		.uleb128 0x9
 1072 007f 2E       		.uleb128 0x2e
 1073 0080 00       		.byte	0
 1074 0081 3F       		.uleb128 0x3f
 1075 0082 19       		.uleb128 0x19
 1076 0083 03       		.uleb128 0x3
 1077 0084 0E       		.uleb128 0xe
 1078 0085 3A       		.uleb128 0x3a
 1079 0086 0B       		.uleb128 0xb
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 36


 1080 0087 3B       		.uleb128 0x3b
 1081 0088 05       		.uleb128 0x5
 1082 0089 27       		.uleb128 0x27
 1083 008a 19       		.uleb128 0x19
 1084 008b 49       		.uleb128 0x49
 1085 008c 13       		.uleb128 0x13
 1086 008d 11       		.uleb128 0x11
 1087 008e 01       		.uleb128 0x1
 1088 008f 12       		.uleb128 0x12
 1089 0090 06       		.uleb128 0x6
 1090 0091 40       		.uleb128 0x40
 1091 0092 18       		.uleb128 0x18
 1092 0093 9742     		.uleb128 0x2117
 1093 0095 19       		.uleb128 0x19
 1094 0096 00       		.byte	0
 1095 0097 00       		.byte	0
 1096 0098 0A       		.uleb128 0xa
 1097 0099 2E       		.uleb128 0x2e
 1098 009a 01       		.byte	0x1
 1099 009b 3F       		.uleb128 0x3f
 1100 009c 19       		.uleb128 0x19
 1101 009d 03       		.uleb128 0x3
 1102 009e 0E       		.uleb128 0xe
 1103 009f 3A       		.uleb128 0x3a
 1104 00a0 0B       		.uleb128 0xb
 1105 00a1 3B       		.uleb128 0x3b
 1106 00a2 05       		.uleb128 0x5
 1107 00a3 27       		.uleb128 0x27
 1108 00a4 19       		.uleb128 0x19
 1109 00a5 49       		.uleb128 0x49
 1110 00a6 13       		.uleb128 0x13
 1111 00a7 11       		.uleb128 0x11
 1112 00a8 01       		.uleb128 0x1
 1113 00a9 12       		.uleb128 0x12
 1114 00aa 06       		.uleb128 0x6
 1115 00ab 40       		.uleb128 0x40
 1116 00ac 18       		.uleb128 0x18
 1117 00ad 9742     		.uleb128 0x2117
 1118 00af 19       		.uleb128 0x19
 1119 00b0 01       		.uleb128 0x1
 1120 00b1 13       		.uleb128 0x13
 1121 00b2 00       		.byte	0
 1122 00b3 00       		.byte	0
 1123 00b4 0B       		.uleb128 0xb
 1124 00b5 34       		.uleb128 0x34
 1125 00b6 00       		.byte	0
 1126 00b7 03       		.uleb128 0x3
 1127 00b8 0E       		.uleb128 0xe
 1128 00b9 3A       		.uleb128 0x3a
 1129 00ba 0B       		.uleb128 0xb
 1130 00bb 3B       		.uleb128 0x3b
 1131 00bc 05       		.uleb128 0x5
 1132 00bd 49       		.uleb128 0x49
 1133 00be 13       		.uleb128 0x13
 1134 00bf 02       		.uleb128 0x2
 1135 00c0 18       		.uleb128 0x18
 1136 00c1 00       		.byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 37


 1137 00c2 00       		.byte	0
 1138 00c3 0C       		.uleb128 0xc
 1139 00c4 898201   		.uleb128 0x4109
 1140 00c7 00       		.byte	0
 1141 00c8 11       		.uleb128 0x11
 1142 00c9 01       		.uleb128 0x1
 1143 00ca 31       		.uleb128 0x31
 1144 00cb 13       		.uleb128 0x13
 1145 00cc 00       		.byte	0
 1146 00cd 00       		.byte	0
 1147 00ce 0D       		.uleb128 0xd
 1148 00cf 2E       		.uleb128 0x2e
 1149 00d0 01       		.byte	0x1
 1150 00d1 3F       		.uleb128 0x3f
 1151 00d2 19       		.uleb128 0x19
 1152 00d3 03       		.uleb128 0x3
 1153 00d4 0E       		.uleb128 0xe
 1154 00d5 3A       		.uleb128 0x3a
 1155 00d6 0B       		.uleb128 0xb
 1156 00d7 3B       		.uleb128 0x3b
 1157 00d8 0B       		.uleb128 0xb
 1158 00d9 27       		.uleb128 0x27
 1159 00da 19       		.uleb128 0x19
 1160 00db 11       		.uleb128 0x11
 1161 00dc 01       		.uleb128 0x1
 1162 00dd 12       		.uleb128 0x12
 1163 00de 06       		.uleb128 0x6
 1164 00df 40       		.uleb128 0x40
 1165 00e0 18       		.uleb128 0x18
 1166 00e1 9742     		.uleb128 0x2117
 1167 00e3 19       		.uleb128 0x19
 1168 00e4 01       		.uleb128 0x1
 1169 00e5 13       		.uleb128 0x13
 1170 00e6 00       		.byte	0
 1171 00e7 00       		.byte	0
 1172 00e8 0E       		.uleb128 0xe
 1173 00e9 34       		.uleb128 0x34
 1174 00ea 00       		.byte	0
 1175 00eb 03       		.uleb128 0x3
 1176 00ec 0E       		.uleb128 0xe
 1177 00ed 3A       		.uleb128 0x3a
 1178 00ee 0B       		.uleb128 0xb
 1179 00ef 3B       		.uleb128 0x3b
 1180 00f0 0B       		.uleb128 0xb
 1181 00f1 49       		.uleb128 0x49
 1182 00f2 13       		.uleb128 0x13
 1183 00f3 02       		.uleb128 0x2
 1184 00f4 17       		.uleb128 0x17
 1185 00f5 00       		.byte	0
 1186 00f6 00       		.byte	0
 1187 00f7 0F       		.uleb128 0xf
 1188 00f8 898201   		.uleb128 0x4109
 1189 00fb 01       		.byte	0x1
 1190 00fc 11       		.uleb128 0x11
 1191 00fd 01       		.uleb128 0x1
 1192 00fe 31       		.uleb128 0x31
 1193 00ff 13       		.uleb128 0x13
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 38


 1194 0100 01       		.uleb128 0x1
 1195 0101 13       		.uleb128 0x13
 1196 0102 00       		.byte	0
 1197 0103 00       		.byte	0
 1198 0104 10       		.uleb128 0x10
 1199 0105 8A8201   		.uleb128 0x410a
 1200 0108 00       		.byte	0
 1201 0109 02       		.uleb128 0x2
 1202 010a 18       		.uleb128 0x18
 1203 010b 9142     		.uleb128 0x2111
 1204 010d 18       		.uleb128 0x18
 1205 010e 00       		.byte	0
 1206 010f 00       		.byte	0
 1207 0110 11       		.uleb128 0x11
 1208 0111 34       		.uleb128 0x34
 1209 0112 00       		.byte	0
 1210 0113 03       		.uleb128 0x3
 1211 0114 0E       		.uleb128 0xe
 1212 0115 3A       		.uleb128 0x3a
 1213 0116 0B       		.uleb128 0xb
 1214 0117 3B       		.uleb128 0x3b
 1215 0118 0B       		.uleb128 0xb
 1216 0119 49       		.uleb128 0x49
 1217 011a 13       		.uleb128 0x13
 1218 011b 3F       		.uleb128 0x3f
 1219 011c 19       		.uleb128 0x19
 1220 011d 02       		.uleb128 0x2
 1221 011e 18       		.uleb128 0x18
 1222 011f 00       		.byte	0
 1223 0120 00       		.byte	0
 1224 0121 12       		.uleb128 0x12
 1225 0122 2E       		.uleb128 0x2e
 1226 0123 00       		.byte	0
 1227 0124 3F       		.uleb128 0x3f
 1228 0125 19       		.uleb128 0x19
 1229 0126 3C       		.uleb128 0x3c
 1230 0127 19       		.uleb128 0x19
 1231 0128 6E       		.uleb128 0x6e
 1232 0129 0E       		.uleb128 0xe
 1233 012a 03       		.uleb128 0x3
 1234 012b 0E       		.uleb128 0xe
 1235 012c 3A       		.uleb128 0x3a
 1236 012d 0B       		.uleb128 0xb
 1237 012e 3B       		.uleb128 0x3b
 1238 012f 0B       		.uleb128 0xb
 1239 0130 00       		.byte	0
 1240 0131 00       		.byte	0
 1241 0132 00       		.byte	0
 1242              		.section	.debug_loc,"",%progbits
 1243              	.Ldebug_loc0:
 1244              	.LLST0:
 1245 0000 0A000000 		.4byte	.LVL8
 1246 0004 0E000000 		.4byte	.LVL9
 1247 0008 0100     		.2byte	0x1
 1248 000a 53       		.byte	0x53
 1249 000b 00000000 		.4byte	0
 1250 000f 00000000 		.4byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 39


 1251              	.LLST1:
 1252 0013 4A000000 		.4byte	.LVL14
 1253 0017 57000000 		.4byte	.LVL15-1
 1254 001b 0100     		.2byte	0x1
 1255 001d 50       		.byte	0x50
 1256 001e 00000000 		.4byte	0
 1257 0022 00000000 		.4byte	0
 1258              		.section	.debug_aranges,"",%progbits
 1259 0000 94000000 		.4byte	0x94
 1260 0004 0200     		.2byte	0x2
 1261 0006 00000000 		.4byte	.Ldebug_info0
 1262 000a 04       		.byte	0x4
 1263 000b 00       		.byte	0
 1264 000c 0000     		.2byte	0
 1265 000e 0000     		.2byte	0
 1266 0010 00000000 		.4byte	.LFB3
 1267 0014 14000000 		.4byte	.LFE3-.LFB3
 1268 0018 00000000 		.4byte	.LFB4
 1269 001c 10000000 		.4byte	.LFE4-.LFB4
 1270 0020 00000000 		.4byte	.LFB5
 1271 0024 0C000000 		.4byte	.LFE5-.LFB5
 1272 0028 00000000 		.4byte	.LFB6
 1273 002c 14000000 		.4byte	.LFE6-.LFB6
 1274 0030 00000000 		.4byte	.LFB8
 1275 0034 0C000000 		.4byte	.LFE8-.LFB8
 1276 0038 00000000 		.4byte	.LFB9
 1277 003c 0C000000 		.4byte	.LFE9-.LFB9
 1278 0040 00000000 		.4byte	.LFB10
 1279 0044 0C000000 		.4byte	.LFE10-.LFB10
 1280 0048 00000000 		.4byte	.LFB11
 1281 004c 0C000000 		.4byte	.LFE11-.LFB11
 1282 0050 00000000 		.4byte	.LFB12
 1283 0054 0C000000 		.4byte	.LFE12-.LFB12
 1284 0058 00000000 		.4byte	.LFB13
 1285 005c 0C000000 		.4byte	.LFE13-.LFB13
 1286 0060 00000000 		.4byte	.LFB14
 1287 0064 0C000000 		.4byte	.LFE14-.LFB14
 1288 0068 00000000 		.4byte	.LFB7
 1289 006c 12000000 		.4byte	.LFE7-.LFB7
 1290 0070 00000000 		.4byte	.LFB2
 1291 0074 6C000000 		.4byte	.LFE2-.LFB2
 1292 0078 00000000 		.4byte	.LFB1
 1293 007c 20000000 		.4byte	.LFE1-.LFB1
 1294 0080 00000000 		.4byte	.LFB15
 1295 0084 0C000000 		.4byte	.LFE15-.LFB15
 1296 0088 00000000 		.4byte	.LFB16
 1297 008c 0C000000 		.4byte	.LFE16-.LFB16
 1298 0090 00000000 		.4byte	0
 1299 0094 00000000 		.4byte	0
 1300              		.section	.debug_ranges,"",%progbits
 1301              	.Ldebug_ranges0:
 1302 0000 00000000 		.4byte	.LFB3
 1303 0004 14000000 		.4byte	.LFE3
 1304 0008 00000000 		.4byte	.LFB4
 1305 000c 10000000 		.4byte	.LFE4
 1306 0010 00000000 		.4byte	.LFB5
 1307 0014 0C000000 		.4byte	.LFE5
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 40


 1308 0018 00000000 		.4byte	.LFB6
 1309 001c 14000000 		.4byte	.LFE6
 1310 0020 00000000 		.4byte	.LFB8
 1311 0024 0C000000 		.4byte	.LFE8
 1312 0028 00000000 		.4byte	.LFB9
 1313 002c 0C000000 		.4byte	.LFE9
 1314 0030 00000000 		.4byte	.LFB10
 1315 0034 0C000000 		.4byte	.LFE10
 1316 0038 00000000 		.4byte	.LFB11
 1317 003c 0C000000 		.4byte	.LFE11
 1318 0040 00000000 		.4byte	.LFB12
 1319 0044 0C000000 		.4byte	.LFE12
 1320 0048 00000000 		.4byte	.LFB13
 1321 004c 0C000000 		.4byte	.LFE13
 1322 0050 00000000 		.4byte	.LFB14
 1323 0054 0C000000 		.4byte	.LFE14
 1324 0058 00000000 		.4byte	.LFB7
 1325 005c 12000000 		.4byte	.LFE7
 1326 0060 00000000 		.4byte	.LFB2
 1327 0064 6C000000 		.4byte	.LFE2
 1328 0068 00000000 		.4byte	.LFB1
 1329 006c 20000000 		.4byte	.LFE1
 1330 0070 00000000 		.4byte	.LFB15
 1331 0074 0C000000 		.4byte	.LFE15
 1332 0078 00000000 		.4byte	.LFB16
 1333 007c 0C000000 		.4byte	.LFE16
 1334 0080 00000000 		.4byte	0
 1335 0084 00000000 		.4byte	0
 1336              		.section	.debug_line,"",%progbits
 1337              	.Ldebug_line0:
 1338 0000 8D010000 		.section	.debug_str,"MS",%progbits,1
 1338      02004B00 
 1338      00000201 
 1338      FB0E0D00 
 1338      01010101 
 1339              	.LASF15:
 1340 0000 72656731 		.ascii	"reg16\000"
 1340      3600
 1341              	.LASF39:
 1342 0006 50574D5F 		.ascii	"PWM_ReadCompare\000"
 1342      52656164 
 1342      436F6D70 
 1342      61726500 
 1343              	.LASF34:
 1344 0016 50574D5F 		.ascii	"PWM_Init\000"
 1344      496E6974 
 1344      00
 1345              	.LASF33:
 1346 001f 50574D5F 		.ascii	"PWM_ClearFIFO\000"
 1346      436C6561 
 1346      72464946 
 1346      4F00
 1347              	.LASF25:
 1348 002d 636F6D70 		.ascii	"compare\000"
 1348      61726500 
 1349              	.LASF23:
 1350 0035 70657269 		.ascii	"period\000"
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 41


 1350      6F6400
 1351              	.LASF38:
 1352 003c 50574D5F 		.ascii	"PWM_Start\000"
 1352      53746172 
 1352      7400
 1353              	.LASF3:
 1354 0046 73686F72 		.ascii	"short unsigned int\000"
 1354      7420756E 
 1354      7369676E 
 1354      65642069 
 1354      6E7400
 1355              	.LASF32:
 1356 0059 50574D5F 		.ascii	"PWM_ReadCapture\000"
 1356      52656164 
 1356      43617074 
 1356      75726500 
 1357              	.LASF11:
 1358 0069 666C6F61 		.ascii	"float\000"
 1358      7400
 1359              	.LASF22:
 1360 006f 636F756E 		.ascii	"counter\000"
 1360      74657200 
 1361              	.LASF7:
 1362 0077 6C6F6E67 		.ascii	"long long unsigned int\000"
 1362      206C6F6E 
 1362      6720756E 
 1362      7369676E 
 1362      65642069 
 1363              	.LASF1:
 1364 008e 756E7369 		.ascii	"unsigned char\000"
 1364      676E6564 
 1364      20636861 
 1364      7200
 1365              	.LASF14:
 1366 009c 72656738 		.ascii	"reg8\000"
 1366      00
 1367              	.LASF5:
 1368 00a1 6C6F6E67 		.ascii	"long unsigned int\000"
 1368      20756E73 
 1368      69676E65 
 1368      6420696E 
 1368      7400
 1369              	.LASF28:
 1370 00b3 50574D5F 		.ascii	"PWM_ReadCounter\000"
 1370      52656164 
 1370      436F756E 
 1370      74657200 
 1371              	.LASF9:
 1372 00c3 75696E74 		.ascii	"uint8\000"
 1372      3800
 1373              	.LASF31:
 1374 00c9 636F6E74 		.ascii	"control\000"
 1374      726F6C00 
 1375              	.LASF12:
 1376 00d1 646F7562 		.ascii	"double\000"
 1376      6C6500
 1377              	.LASF24:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 42


 1378 00d8 50574D5F 		.ascii	"PWM_WriteCompare\000"
 1378      57726974 
 1378      65436F6D 
 1378      70617265 
 1378      00
 1379              	.LASF10:
 1380 00e9 75696E74 		.ascii	"uint16\000"
 1380      313600
 1381              	.LASF47:
 1382 00f0 50574D5F 		.ascii	"PWM_initVar\000"
 1382      696E6974 
 1382      56617200 
 1383              	.LASF41:
 1384 00fc 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1384      74657243 
 1384      72697469 
 1384      63616C53 
 1384      65637469 
 1385              	.LASF8:
 1386 0113 756E7369 		.ascii	"unsigned int\000"
 1386      676E6564 
 1386      20696E74 
 1386      00
 1387              	.LASF42:
 1388 0120 43794578 		.ascii	"CyExitCriticalSection\000"
 1388      69744372 
 1388      69746963 
 1388      616C5365 
 1388      6374696F 
 1389              	.LASF35:
 1390 0136 72657375 		.ascii	"result\000"
 1390      6C7400
 1391              	.LASF43:
 1392 013d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1392      43313120 
 1392      352E342E 
 1392      31203230 
 1392      31363036 
 1393 0170 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1393      20726576 
 1393      6973696F 
 1393      6E203233 
 1393      37373135 
 1394 01a3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1394      66756E63 
 1394      74696F6E 
 1394      2D736563 
 1394      74696F6E 
 1395              	.LASF21:
 1396 01cb 50574D5F 		.ascii	"PWM_WritePeriod\000"
 1396      57726974 
 1396      65506572 
 1396      696F6400 
 1397              	.LASF26:
 1398 01db 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 1398      53657449 
 1398      6E746572 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 43


 1398      72757074 
 1398      4D6F6465 
 1399              	.LASF17:
 1400 01f0 73697A65 		.ascii	"sizetype\000"
 1400      74797065 
 1400      00
 1401              	.LASF6:
 1402 01f9 6C6F6E67 		.ascii	"long long int\000"
 1402      206C6F6E 
 1402      6720696E 
 1402      7400
 1403              	.LASF27:
 1404 0207 696E7465 		.ascii	"interruptMode\000"
 1404      72727570 
 1404      744D6F64 
 1404      6500
 1405              	.LASF30:
 1406 0215 50574D5F 		.ascii	"PWM_WriteControlRegister\000"
 1406      57726974 
 1406      65436F6E 
 1406      74726F6C 
 1406      52656769 
 1407              	.LASF37:
 1408 022e 50574D5F 		.ascii	"PWM_interruptState\000"
 1408      696E7465 
 1408      72727570 
 1408      74537461 
 1408      746500
 1409              	.LASF40:
 1410 0241 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 1410      52656164 
 1410      50657269 
 1410      6F6400
 1411              	.LASF2:
 1412 0250 73686F72 		.ascii	"short int\000"
 1412      7420696E 
 1412      7400
 1413              	.LASF20:
 1414 025a 50574D5F 		.ascii	"PWM_WriteCounter\000"
 1414      57726974 
 1414      65436F75 
 1414      6E746572 
 1414      00
 1415              	.LASF19:
 1416 026b 50574D5F 		.ascii	"PWM_Stop\000"
 1416      53746F70 
 1416      00
 1417              	.LASF4:
 1418 0274 6C6F6E67 		.ascii	"long int\000"
 1418      20696E74 
 1418      00
 1419              	.LASF13:
 1420 027d 63686172 		.ascii	"char\000"
 1420      00
 1421              	.LASF44:
 1422 0282 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 1422      72617465 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccqh1oAy.s 			page 44


 1422      645F536F 
 1422      75726365 
 1422      5C50536F 
 1423              	.LASF16:
 1424 029f 6C6F6E67 		.ascii	"long double\000"
 1424      20646F75 
 1424      626C6500 
 1425              	.LASF46:
 1426 02ab 50574D5F 		.ascii	"PWM_ReadControlRegister\000"
 1426      52656164 
 1426      436F6E74 
 1426      726F6C52 
 1426      65676973 
 1427              	.LASF0:
 1428 02c3 7369676E 		.ascii	"signed char\000"
 1428      65642063 
 1428      68617200 
 1429              	.LASF45:
 1430 02cf 433A5C55 		.ascii	"C:\\Users\\simon\\Desktop\\ScienceFirmware.cydsn\000"
 1430      73657273 
 1430      5C73696D 
 1430      6F6E5C44 
 1430      65736B74 
 1431              	.LASF18:
 1432 02fc 50574D5F 		.ascii	"PWM_Enable\000"
 1432      456E6162 
 1432      6C6500
 1433              	.LASF29:
 1434 0307 50574D5F 		.ascii	"PWM_ReadStatusRegister\000"
 1434      52656164 
 1434      53746174 
 1434      75735265 
 1434      67697374 
 1435              	.LASF36:
 1436 031e 6374726C 		.ascii	"ctrl\000"
 1436      00
 1437              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
